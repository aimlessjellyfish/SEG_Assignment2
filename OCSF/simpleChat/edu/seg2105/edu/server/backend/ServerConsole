package edu.seg2105.edu.server.backend; //gets the EchoServer

import java.util.Scanner;

import edu.seg2105.client.common.*; //allows for ChatIF implementation


/**
 * This class constructs the UI for a server side. It implments the chat interface in order to activate the display() method
 */
public class ServerConsole implements ChatIF{
    //Class variables

    /**
     * Default port to connect on
     */
    final public static int DEFAULT_PORT = 5555;

    //Instance variables

    /**
     * The instance of the EchoServer that creates this Server Console
     */
    EchoServer server;

    /**
     * Scanner to read from console
     */
    Scanner fromConsole;

    //Constructors

    /**
     * Constructs an instance of the ServerConsole UI
     * 
     * @param port The port connected on
     */
    public ServerConsole(EchoServer echoServer){
        try{
            this.server = echoServer;
        } catch(Throwable e){
            System.out.println("Error: Can't setup connection!" + "Terminating server");
            System.exit(1);
        }
        //Create a scanner object to read from console
        fromConsole = new Scanner(System.in);
    }

    //Instance methods

    /**
     * This methods waits for input from the console. Once it is recieved, it echos the message in the server and sends it to the clients
     */
    public void accept(){
        try{
            String message;

            while (true){
                message = fromConsole.nextLine();
                server.handleMessageFromServerConsole(message);
                display(message);
            }
        } catch(Exception ex){
            System.out.println("Unexpected error while reading from concole!");
        }
    }

    /**
     * This method overrides the method in the ChatIF interface. It displays a message onto the screen
     * 
     * @param message The string to be displayed
     */
    public void display(String message){
        System.out.println("SERVER MSG> " + message);
    }

    //Class methods 
  
    /**
    * This method is responsible for the creation of the Server UI.
    *
    * @param args[0] The host to connect to.
    */
    public static void main(String[] args) {
        int port = 0;

        try{
            port = Integer.parseInt(args[0]);
        } catch(Exception e){
            port = DEFAULT_PORT;
        }

        EchoServer sv = new EchoServer(port);

        try{
            sv.listen();
        } catch(Exception e){
            System.out.println("ERROR - Could not listen for clients!");
        }
        
        ServerConsole chat = new ServerConsole(sv);
        chat.accept();  //Wait for console data
  }

}
